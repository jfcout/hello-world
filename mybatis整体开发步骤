1. 核心思路：在javaEE编程结构中，根据框架的特点进行合理使用
  JavaEE编程结构（分成开发）     
  Action                             Struts框架：解决控制器问题
  Service
  DAO                                MyBatis框架：解决数据库访问问题

2.
  环境搭建
  (1) 导入jar包          引入jar包，解决jar冲突问题，救高不救低
      Struct2依赖的jar包：
        commons-fileupload-1.3.jar
        commons-io-2.0.1.jar
        commons-lang3-3.1.jar
        commons-logging-1.1.3.jar
        freemarker-2.3.19.jar
        javassist-3.11.0.GA.jar
        ognl-3.0.6.jar
        patchca-0.5.0.jar
        structs2-core-2.3.15.1.jar
        xwork-core-2.3.15.1.jar
      MyBatis依赖的jar包：
        asm-3.3.1.jar
        cglib-2.2.2.jar
        commons-logging-1.1.1.jar
        javassist-3.17.1-GA.jar
        log4j-1.2.17.jar
        mybatis-3.2.2.jar
        ojdbc14.jar
        slf4j-api-1.7.5.jar
        slf4j-log4j12-1.7.5.jar    
      将上述struct2和MyBatis依赖的jar包导入到WEB-INF -> lib 中 
  (2) 引入配置文件(struct2需要一个，Mybatis需要三个  )
      Struct2的配置文件：
        1) struts.xml
      Mybatis的三个配置文件：
        1) log4j.properties
        2) mybatis-config.xml
        3) xxxMapper.xml 
      将上述Structs2和Mybatis导入src中
  (3) 初始化配置
      1) 在WEB-INF -> web.xml添加filter 
        <filter>
          <filter-name>Structs2</filter-name>
          <filter-class>org.apache.struts2.dispatcher.ng.filter.StructsPrepareAndExecuteFilter</filter-clss>
        <filter>
        <filter-mapping>
          <filter-name>Structs2</filter-name>
          <url-pattern>/*</url-pattern> 
        <filter-mapping>            
      2) 在mybatis-config.xml中添加environments标签
        <environments default="oracle">
          <environment id="oracle">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
              <property name="driver" value="oracle.jdbc.Oracle.
              <property name="url" value="jdbc:oracle:thin:@loc
              <property name="username" value="hr"/>
              <property name="password" value="hr"/>
            </dataSource>
          </environment>
        <environments>





3.开发步骤
  (1) DAO (Mybatis)
      1) table  
        create table t_users(
            id integer primary key,
            name varchar2(12),
            password varchar2(12),
            age integer
        ); 
      2) entity
        User.jave文件：
            public class User{
                private int id;
                private String name;
                private String password;
                private int age;

                ...有参和无参构造方法...
                ...set和get方法...
            }
      3) dao接口
        UserDAO.java文件：
            public interface UserDAO{
                public void save(User user); 
            }
      4) mapper文件
        UserDAOMapper.xml文件：
            <mapper namespace="com.baizhi.dao.UserDAO">
                <insert id="save" parameterType="com.baizhi.entity.User">
                    <selectKey keyProperty="id" resultType="int" order="BEFORE">
                        select suns_seq.nextval from dual  
                    </selectKey>
                    insert into t_users(id,name,password,age) values (#{id},#{name},#{password},#{age})
                </insert>
            </mapper>
      5) mapper文件的注册
        在mybatis-config.xml中的添加mappers标签
            <mappers>
                <mapper resource="com/baizhi/mapper/UserDAOMapper.xml"/>
            </mappers>   
      6) API测试

  (2) Service (调用DAO控制事务)
      1) MyBatilsUtil.getMapper()  ---  DAO
      2) 控制事务

  (3) Action 
      1) 实现Action接口(做三件事情：1.收集数据 2.调用业务对象 3.流程跳转)
          public class RegAction implements Action{
              private User user;   //通过对象收集数据
              private UserService userService = new UserServiceImpl();
              public User getUser(){
                  return user;
              }  
              public void setUser(User user){
                  this.user = user;
              }
              @Override
              public String execute() throws Exception{  //实现接口中的方法
                  userService.register(user);
                  return Action.SUCCESS;
              }
          }
      2) 配置struts.xml
          在struts.xml添加package标签
            <package name="sm" extends="struts-default" namespace="/sm">
                <action name="reg" class="com.baizhi.web.RegAction">
                    <result name="success">/regOk.jsp</result>
                </action>
            </package>

   


    

